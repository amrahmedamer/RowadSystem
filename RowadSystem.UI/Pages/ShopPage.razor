@page "/Shop"
@* @using Microsoft.AspNetCore.Components.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
<AuthorizeView>
    <Authorized> *@

<div class="container-fluid py-4 px-3">
    <!-- Page Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">
                <div>
                    <h1 class="h2 mb-1 text-gradient">
                        <svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" fill="currentColor" class="bi bi-shop me-2" viewBox="0 0 16 16">
                            <path d="M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0M1.5 8.5A.5.5 0 0 1 2 9v6h1v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5h6V9a.5.5 0 0 1 1 0v6.5a.5.5 0 0 1-.5.5H.5a.5.5 0 0 1-.5-.5V9a.5.5 0 0 1 .5-.5M4 15h3v-5H4zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1zm3 0h-2v3h2z"/>
                        </svg>
                        Shop
                    </h1>
                    <p class="text-muted mb-0">Discover our amazing products</p>
                </div>
                <div class="d-flex align-items-center gap-2">
                    <span class="badge bg-primary-subtle text-primary px-3 py-2">
                        @ProductList.Items.Count() Products
                    </span>
                </div>
            </div>
        </div>
    </div>

    <!-- Products Grid -->
    <div class="row g-3 g-md-4">
        @foreach (var item in ProductList.Items)
        {
            <!-- Responsive Product Card -->
            <div class="col-6 col-sm-6 col-md-4 col-lg-3 col-xl-2">
                <div class="product-card animate-slide-up">
                    <!-- Product Image Container -->
                    <div class="product-image-container">
                        @if (item.Images != null && item.Images.Any())
                        {
                            <div id="carousel-@item.Id" class="carousel slide product-carousel" data-bs-ride="carousel">
                                <div class="carousel-inner">
                                    @foreach (var image in item.Images.Select((value, index) => new { value, index }))
                                    {
                                        <div class="carousel-item @(image.index == 0 ? "active" : "")">
                                            <img src="@image.value.ImageUrL" 
                                                 class="product-image" 
                                                 alt="@item.Name"
                                                 loading="lazy">
                                        </div>
                                    }
                                </div>
                                
                                @if (item.Images.Count() > 1)
                                {
                                    <!-- Carousel Controls -->
                                    <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@item.Id" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon"></span>
                                    </button>
                                    <button class="carousel-control-next" type="button" data-bs-target="#carousel-@item.Id" data-bs-slide="next">
                                        <span class="carousel-control-next-icon"></span>
                                    </button>
                                    
                                    <!-- Carousel Indicators -->
                                    <div class="carousel-indicators">
                                        @for (int i = 0; i < item.Images.Count(); i++)
                                        {
                                            <button type="button" 
                                                    data-bs-target="#carousel-@item.Id" 
                                                    data-bs-slide-to="@i" 
                                                    class="@(i == 0 ? "active" : "")"
                                                    aria-label="Slide @(i + 1)"></button>
                                        }
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <img src="NoImage.png" class="product-image" alt="No Image Available" loading="lazy">
                        }
                        
                        <!-- Quick Actions Overlay -->
                        <div class="product-overlay">
                            <button class="btn btn-light btn-sm rounded-circle" 
                                    title="Quick View"
                                    @onclick="() => QuickView(item)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-eye" viewBox="0 0 16 16">
                                    <path d="M16 8s-3-5.5-8-5.5S0 8 0 8s3 5.5 8 5.5S16 8 16 8M1.173 8a13 13 0 0 1 1.66-2.043C4.12 4.668 5.88 3.5 8 3.5s3.879 1.168 5.168 2.457A13 13 0 0 1 14.828 8q-.086.13-.195.288c-.335.48-.83 1.12-1.465 1.755C11.879 11.332 10.119 12.5 8 12.5s-3.879-1.168-5.168-2.457A13 13 0 0 1 1.172 8z"/>
                                    <path d="M8 5.5a2.5 2.5 0 1 0 0 5 2.5 2.5 0 0 0 0-5M4.5 8a3.5 3.5 0 1 1 7 0 3.5 3.5 0 0 1-7 0"/>
                                </svg>
                            </button>
                        </div>
                    </div>

                    <!-- Product Info -->
                    <div class="product-info">
                        <h6 class="product-title">@item.Name</h6>
                        <div class="product-price">
                            <span class="price-current">$@item.ProductUnits.Price</span>
                        </div>
                        
                        <!-- Add to Cart Button -->
                        <button class="btn btn-primary btn-sm w-100 add-to-cart-btn" 
                                @onclick="() => AddToCart(item)"
                                title="Add to Cart">
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" class="bi bi-cart-plus me-1" viewBox="0 0 16 16">
                                <path d="M9 5.5a.5.5 0 0 0-1 0V7H6.5a.5.5 0 0 0 0 1H8v1.5a.5.5 0 0 0 1 0V8h1.5a.5.5 0 0 0 0-1H9z"/>
                                <path d="M.5 1a.5.5 0 0 0 0 1h1.11l.401 1.607 1.498 7.985A.5.5 0 0 0 4 12h1a2 2 0 1 0 0 4 2 2 0 0 0 0-4h7a2 2 0 1 0 0 4 2 2 0 0 0 0-4h1a.5.5 0 0 0 .491-.408l1.5-8A.5.5 0 0 0 14.5 3H2.89l-.405-1.621A.5.5 0 0 0 2 1zm3.915 10L3.102 4h10.796l-1.313 7zM6 14a1 1 0 1 1-2 0 1 1 0 0 1 2 0m7 0a1 1 0 1 1-2 0 1 1 0 0 1 2 0"/>
                            </svg>
                            <span class="d-none d-sm-inline">Add to Cart</span>
                            <span class="d-sm-none">Add</span>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
    
    @if (!ProductList.Items.Any())
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="text-center py-5">
                    <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="currentColor" class="bi bi-box-seam text-muted mb-3" viewBox="0 0 16 16">
                        <path d="M8.186 1.113a.5.5 0 0 0-.372 0L1.846 3.5a.5.5 0 0 0-.14.65L8 15.85l6.294-11.7a.5.5 0 0 0-.14-.65zM7.5 14.762V4.001L2.5 3.5l5 11.262zm1 0L13.5 3.5l-5 .501v10.761z"/>
                    </svg>
                    <h4 class="text-muted">No Products Available</h4>
                    <p class="text-muted">Check back later for new products!</p>
                </div>
            </div>
        </div>
    }
</div>

<style>
/* ============================================
   RESPONSIVE PRODUCT CARD STYLES
   ============================================ */

.product-card {
    background: rgba(255, 255, 255, 0.95);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
    transition: var(--transition-base);
    overflow: hidden;
    height: 100%;
    display: flex;
    flex-direction: column;
    backdrop-filter: blur(10px);
}

.product-card:hover {
    box-shadow: var(--shadow);
    transform: translateY(-5px);
}

.product-image-container {
    position: relative;
    overflow: hidden;
    border-radius: var(--border-radius-lg) var(--border-radius-lg) 0 0;
    aspect-ratio: 1;
}

.product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition-slow);
}

.product-card:hover .product-image {
    transform: scale(1.05);
}

.product-overlay {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    opacity: 0;
    transition: var(--transition-base);
}

.product-card:hover .product-overlay {
    opacity: 1;
}

.product-info {
    padding: 1rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.product-title {
    font-weight: 600;
    margin-bottom: 0.5rem;
    font-size: 0.9rem;
    line-height: 1.3;
    color: #333;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.product-price {
    margin-bottom: 1rem;
    flex-grow: 1;
}

.price-current {
    font-weight: 700;
    font-size: 1.1rem;
    color: var(--primary-color);
}

.add-to-cart-btn {
    border-radius: var(--border-radius);
    font-weight: 500;
    padding: 0.5rem 1rem;
    font-size: 0.85rem;
}

/* Carousel Enhancements */
.product-carousel .carousel-control-prev,
.product-carousel .carousel-control-next {
    width: 15%;
    opacity: 0;
    transition: var(--transition-base);
}

.product-card:hover .carousel-control-prev,
.product-card:hover .carousel-control-next {
    opacity: 1;
}

.product-carousel .carousel-control-prev-icon,
.product-carousel .carousel-control-next-icon {
    background-color: rgba(0, 0, 0, 0.5);
    border-radius: 50%;
    width: 30px;
    height: 30px;
}

.product-carousel .carousel-indicators {
    bottom: 0.5rem;
    margin-bottom: 0;
}

.product-carousel .carousel-indicators button {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin: 0 2px;
}

/* ============================================
   MOBILE RESPONSIVE ADJUSTMENTS
   ============================================ */

@media (max-width: 575.98px) {
    .product-info {
        padding: 0.75rem;
    }
    
    .product-title {
        font-size: 0.85rem;
        -webkit-line-clamp: 1;
    }
    
    .price-current {
        font-size: 1rem;
    }
    
    .add-to-cart-btn {
        padding: 0.4rem 0.75rem;
        font-size: 0.8rem;
    }
    
    .product-overlay {
        top: 0.5rem;
        right: 0.5rem;
    }
}

@media (max-width: 767.98px) {
    .product-carousel .carousel-control-prev,
    .product-carousel .carousel-control-next {
        display: none;
    }
}

/* Grid adjustments for better mobile experience */
@media (max-width: 575.98px) {
    .row.g-3 {
        --bs-gutter-x: 0.75rem;
        --bs-gutter-y: 0.75rem;
    }
}
</style>

@*    </Authorized>
    <NotAuthorized>
        <p>You are not logged in.</p>
        <button class="btn btn-primary" @onclick="RedirectToLogin">Login</button>
    </NotAuthorized>
</AuthorizeView>

 *@

