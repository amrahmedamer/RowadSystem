
<div class="search-container position-relative">
    <!-- Search Icon -->
    <svg xmlns="http://www.w3.org/2000/svg" 
         width="18" height="18" 
         fill="currentColor" 
         class="search-icon bi bi-search" 
         viewBox="0 0 16 16">
        <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
    </svg>
    
    <!-- Search Input -->
    <input class="form-control search-input-enhanced"
           type="search"
           placeholder="@GetPlaceholderText()"
           aria-label="Search"
           @bind="searchValue"
           @oninput="HandleSearch"
           @onfocus="OnSearchFocus"
           @onblur="OnSearchBlur" />
    
    <!-- Clear Button (visible when there's text) -->
    @if (!string.IsNullOrEmpty(searchValue))
    {
        <button type="button" 
                class="btn btn-link search-clear-btn" 
                @onclick="ClearSearch"
                aria-label="Clear search">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-x" viewBox="0 0 16 16">
                <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
            </svg>
        </button>
    }
</div>

<style>
/* ============================================
   RESPONSIVE SEARCH FORM STYLES
   ============================================ */

.search-container {
    width: 100%;
    max-width: 500px;
}

.search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: #6c757d;
    z-index: 2;
    transition: var(--transition-base);
}

.search-input-enhanced {
    padding-left: 3rem;
    padding-right: 3rem;
    border-radius: 2rem;
    border: 2px solid rgba(255, 255, 255, 0.2);
    background: rgba(255, 255, 255, 0.9);
    backdrop-filter: blur(10px);
    transition: var(--transition-base);
    font-size: 0.95rem;
    height: 45px;
}

.search-input-enhanced:focus {
    border-color: rgba(255, 255, 255, 0.8);
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
    transform: scale(1.02);
}

.search-input-enhanced:focus + .search-icon {
    color: var(--primary-color);
}

.search-clear-btn {
    position: absolute;
    right: 0.5rem;
    top: 50%;
    transform: translateY(-50%);
    border: none;
    background: none;
    color: #6c757d;
    padding: 0.25rem;
    z-index: 2;
    transition: var(--transition-base);
}

.search-clear-btn:hover {
    color: var(--danger-color);
    transform: translateY(-50%) scale(1.1);
}

/* Mobile responsive adjustments */
@media (max-width: 767.98px) {
    .search-container {
        max-width: 100%;
    }
    
    .search-input-enhanced {
        height: 42px;
        font-size: 0.9rem;
        padding-left: 2.5rem;
        padding-right: 2.5rem;
    }
    
    .search-icon {
        left: 0.75rem;
        width: 16px;
        height: 16px;
    }
    
    .search-clear-btn {
        right: 0.75rem;
    }
}

@media (max-width: 575.98px) {
    .search-input-enhanced {
        height: 40px;
        font-size: 0.85rem;
    }
}

/* Search suggestions (for future enhancement) */
.search-suggestions {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow);
    z-index: 1000;
    margin-top: 0.5rem;
    max-height: 300px;
    overflow-y: auto;
}

.search-suggestion-item {
    padding: 0.75rem 1rem;
    cursor: pointer;
    transition: var(--transition-base);
    border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.search-suggestion-item:hover {
    background: rgba(0, 123, 255, 0.1);
}

.search-suggestion-item:last-child {
    border-bottom: none;
}
</style>
