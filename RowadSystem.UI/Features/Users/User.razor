@page "/User"
@using Blazored.FluentValidation
@using Radzen.Blazor
@using RowadSystem.Shard.Contract.Auth
<PageTitle>Users</PageTitle>

<Modal @ref="modal" ModalId="_userRequest" Title="Add New User">
    <BodyContent>
        <EditForm Model="@_userRequest" OnValidSubmit="HandleSubmit" id="FormModal">
            <FluentValidationValidator />

            <!-- user Name -->
            <div class="mb-4">
                <h6 class="fs-6 fw-bold">Name</h6>
                <div class="row g-3">
                    <div class="col-md-6 col-6">
                        <InputText class="form-control shadow-sm" @bind-Value="_userRequest.FirstName" placeholder="Enter first name" />
                        <ValidationMessage For="() => _userRequest.FirstName" />
                    </div>
                    <div class="col-md-6 col-6">
                        <InputText class="form-control shadow-sm" @bind-Value="_userRequest.LastName" placeholder="Enter last name" />
                        <ValidationMessage For="() => _userRequest.LastName" />
                    </div>
                </div>
            </div>

            <!-- user Email -->
            <div class="mb-4">
                <label for="userEmail" class="form-label fs-6 fw-bold">Email</label>
                <InputText id="userEmail" class="form-control shadow-sm" @bind-Value="_userRequest.Email" placeholder="Enter user email" />
                <ValidationMessage For="() => _userRequest.Email" />
            </div>
            <!-- user Email -->
            <div class="mb-4">
                <label for="password" class="form-label fs-6 fw-bold">Password</label>
                <input type="password" id="password" class="form-control shadow-sm" @bind="_userRequest.Password" placeholder="Enter user email" />
                <ValidationMessage For="() => _userRequest.Password" />
            </div>

            @* <!-- User Role Section -->
            <div class="mb-4">
                <h6 class="fw-bold">Select Role</h6>
                <div class="row g-3">
                    <div class="col-md-4 col-12">
                        <!-- Multi-select Dropdown with Select2 -->
                        <select id="searchSelect" class="form-select shadow-sm" multiple @ref="roleSelect">
                            @foreach (var role in _rolesResponse)
                            {
                                <option value="@role">@role</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
        *@


            <div class="mb-4">
                <h6 class="fs-6 fw-bold">Select Role</h6>
                        <RadzenDropDown @bind-Value="@selectedRoles"
                                        Data="@_rolesResponse"
                                        Multiple="true"
                                        AllowClear="true"
                                        Placeholder="Select roles"
                                        Chips="true"
                                        Style="width: 100%;" />
            </div>

          

            <!-- Address Section -->
            <div class="mb-4">
                <h6 class="fs-6 fw-bold">Address</h6>
                <div class="row g-3">
                    <div class="col-md-4 col-12">
                        <select @bind="_userRequest.Address.GovernorateId" class="form-select shadow-sm" aria-label="Select Governorate" @oninput="@(e => OnGovernorateChanged(e))">
                            <option value="0">Select Governorate</option>
                            @foreach (var governrate in _governrateResponse)
                            {
                                <option value="@governrate.Id">@governrate.Name</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => _userRequest.Address.GovernorateId)" class="text-danger fs-6" />

                    </div>
                    <div class="col-md-4 col-12">
                        <select @bind="_userRequest.Address.CityId" class="form-select shadow-sm" aria-label="Select City">
                            <option value="0">Select City</option>
                            @foreach (var cities in _citiesResponse)
                            {
                                <option value="@cities.Id">@cities.Name</option>
                            }
                        </select>
                        <ValidationMessage For="@(() => _userRequest.Address.CityId)" class="text-danger fs-6" />

                    </div>
                    <div class="col-md-4 col-12">
                        <InputText @bind-Value="_userRequest.Address.Street"
                                   class="form-control  shadow-sm "
                                   placeholder="Street" />
                        <ValidationMessage For="@(() => _userRequest.Address.Street)" class="text-danger fs-6" />

                    </div>
                </div>
                <div class="mb-3">
                    <InputText @bind-Value="_userRequest.Address.AddressDetails"
                               class="form-control  shadow-sm mt-2"
                               placeholder="Address Details" />
                    <ValidationMessage For="@(() => _userRequest.Address.AddressDetails)" class="text-danger fs-6" />

                </div>
            </div>


            <!-- Phone Section Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h6 class="text-primary fs-6 fw-bold mb-0">Phone Numbers</h6>
                @if (_userRequest.PhoneNumbers.Count < 2)
                {
                    <button type="button"
                            class="btn btn-outline-primary btn-sm"
                            @onclick="AddPhoneNumber"
                            title="Add Phone Number">
                        ➕ Add Phone
                    </button>
                }
            </div>

            <!-- Phone Inputs -->
            @for (int i = 0; i < _userRequest.PhoneNumbers.Count; i++)
            {
                var index = i;
                var phone = _userRequest.PhoneNumbers[i];

                <div class="row g-2 mb-3 align-items-center">
                    <!-- Phone Input -->
                    <div class="col-md-6 col-12">
                        <InputText @bind-Value="phone.Number"
                                   class="form-control form-control-lg shadow-sm"
                                   placeholder="Enter phone number" />
                        <ValidationMessage For="() => phone.Number" />

                    </div>

                    <!-- Primary Phone Selection -->
                    <div class="col-md-4 col-8 d-flex align-items-center">
                        <div class="form-check ms-1">
                            <input type="radio"
                                   name="primaryPhone"
                                   class="form-check-input"
                                   checked="@phone.IsPrimary"
                                   @onchange="() => SetAsPrimary(i)" />
                            <label class="form-check-label text-primary ms-2">
                                Primary
                            </label>
                        </div>
                    </div>

                    <!-- Remove Button -->
                    <div class="col-md-2 col-4 text-end">
                        @if (_userRequest.PhoneNumbers.Count > 1)
                        {
                            <div class="btn text-danger btn-sm "
                                 @onclick="() => RemovePhoneNumber(index)"
                                 title="Remove Phone Number">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                    <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                </svg>
                            </div>
                        }
                    </div>
                </div>
            }

        </EditForm>

    </BodyContent>
    <FooterContent>
        <button class="btn btn-outline-secondary" @onclick="CloseModal">Cancel</button>
        <button type="submit" class="btn btn-primary" form="FormModal">Save</button>
    </FooterContent>
</Modal>



@if (IsLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="height: 60vh;">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="container-fluid px-3 animate__animated animate__fadeIn">

        <!-- Header Section -->
        <div class="card border-0 shadow-sm mb-4">
            <div class="card-body d-flex justify-content-between align-items-center flex-wrap">
                <div class="d-flex align-items-center gap-3">
                    <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" fill="currentColor" class="bi bi-person-lines-fill text-primary" viewBox="0 0 16 16">
                        <path d="M6 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5 6s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zM11 3.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5m.5 2.5a.5.5 0 0 0 0 1h4a.5.5 0 0 0 0-1zm2 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1zm0 3a.5.5 0 0 0 0 1h2a.5.5 0 0 0 0-1z" />
                    </svg>
                    <div>
                        <h4 class="mb-0 fw-bold text-dark">Users</h4>
                    </div>
                </div>

                <a @onclick="OpenModal" class="btn btn-primary btn-sm fw-semibold px-4 py-2 shadow-sm d-flex align-items-center gap-3 ">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-person-plus-fill " viewBox="0 0 16 16">
                        <path d="M1 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6" />
                        <path fill-rule="evenodd" d="M13.5 5a.5.5 0 0 1 .5.5V7h1.5a.5.5 0 0 1 0 1H14v1.5a.5.5 0 0 1-1 0V8h-1.5a.5.5 0 0 1 0-1H13V5.5a.5.5 0 0 1 .5-.5" />
                    </svg>
                    Add User
                </a>
            </div>
        </div>

        <!-- Toolbar Merged Inside Card Header -->
        <div class="card-header bg-white border-bottom py-3 px-4">
            <div class="d-flex justify-content-between align-items-center flex-wrap gap-3">

                <!-- Rows Per Page Selector -->
                <div class="d-flex align-items-center gap-2">
                    <label class="mb-0 text-muted">Rows:</label>
                    <select class="form-select form-select-sm w-auto shadow-sm" @onchange="OnPageSizeChanged">
                        @foreach (var size in new[] { 5, 10, 20 })
                        {
                            <option value="@size" selected="@(PageSize == size)">@size</option>
                        }
                    </select>
                </div>

            </div>
        </div>


        <!-- Supplier Table Card with Toolbar -->
        <div class="card shadow-sm border-0">

            <!-- Table Body -->
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover align-middle text-center mb-0">
                        <thead class="bg-secondary text-white border-bottom border-3 border-white">
                            <tr>
                                <th style="width: 60px;" class="py-3 px-2">#</th>
                                <th class="text-start py-3 px-3">Name</th>
                                <th class="text-start py-3 px-3">Email</th>
                                <th class="text-start py-3 px-3">Roles</th>
                                <th style="width: 100px;" class="py-3 px-3">Phone</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (UserList is not null)
                            {
                                @foreach (var user in UserList.Items.Select((value, index) => new { value, index }))
                                {
                                    <tr>
                                        <td class="text-muted fw-semibold">@(user.index + 1)</td>
                                        <td class="text-start fw-semibold">@user.value.FirstName @user.value.LastName</td>
                                        <td class="text-start text-muted">@user.value.Email</td>
                                        <td class="text-start text-muted">
                                            @string.Join(',', @user.value.Roles)
                                        </td>

                                        <td class="text-muted">
                                            @foreach (var phone in user.value.PhoneNumbers)
                                            {
                                                <div>@phone</div>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center text-muted py-5">
                                        <i class="bi bi-person-x fs-4 text-danger"></i> No suppliers found.
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination Below the Table -->
                <nav aria-label="Page navigation example" class="mt-3 d-flex justify-content-center">
                    <ul class="pagination pagination-sm mb-0">
                        <!-- Previous Button -->
                        <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                            <button class="page-link d-flex align-items-center gap-1" @onclick="() => ChangePage(CurrentPage - 1)" aria-label="Previous">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-left-fill" viewBox="0 0 16 16">
                                    <path d="m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z" />
                                </svg>
                                Prev
                            </button>
                        </li>

                        <!-- Page Numbers with ellipsis -->
                        @for (int i = 1; i <= UserList.TotalPages; i++)
                        {
                            if (i == 1 || i == UserList.TotalPages || Math.Abs(i - CurrentPage) <= 1)
                            {
                                <li class="page-item @(CurrentPage == i ? "active" : "")" aria-current="@(CurrentPage == i ? "page" : null)">
                                    <button class="page-link" @onclick="() => ChangePage(i)">@i</button>
                                </li>
                            }
                            else if (i == CurrentPage - 2 || i == CurrentPage + 2)
                            {
                                <li class="page-item disabled">
                                    <span class="page-link">…</span>
                                </li>
                            }
                        }

                        <!-- Next Button -->
                        <li class="page-item @(CurrentPage == UserList.TotalPages ? "disabled" : "")">
                            <button class="page-link d-flex align-items-center gap-1" @onclick="() => ChangePage(CurrentPage + 1)" aria-label="Next">
                                Next
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-caret-right-fill" viewBox="0 0 16 16">
                                    <path d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z" />
                                </svg>
                            </button>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
}



